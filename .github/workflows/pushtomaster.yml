name: Publish Pre-Release Nuget and Docker

on:
  push:
    # branches to consider in the event; optional, defaults to all
    branches:
      - master

jobs:
  build:
    name: "Publish Pre-Release Nugets and Docker"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4 
      with:
        fetch-depth: 0

    - name: Install NET 7
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '7.0.x'
           
    - name: Restore Nuget Packages
      run: dotnet restore EstateManagement.sln --source https://api.nuget.org/v3/index.json --source https://www.myget.org/F/transactionprocessing/api/v3/index.json

    - name: Build Code
      run: dotnet build EstateManagement.sln --configuration Release

    - name: 'Get Previous tag'
      id: get-latest-tag
      uses: actions-ecosystem/action-get-latest-tag@v1
      with:
          semver_only: true

    - name: 'Bump Version'
      id: bump-semver
      uses: actions-ecosystem/action-bump-semver@v1
      with:
        current_version: ${{ steps.get-latest-tag.outputs.tag }}
        level: patch
    
    - name: Print Version
      id: next_version
      run: echo ::set-output name=VERSION::${{ steps.bump-semver.outputs.new_version }}-build$GITHUB_RUN_NUMBER
        
    - name: Build and Publish Nuget Packages
      run: |
        dotnet pack "EstateManagement.Client\EstateManagement.Client.csproj" /p:PackageVersion=${{ steps.next_version.outputs.VERSION }} --output Nugets -c Release            
        dotnet nuget push Nugets/EstateManagement.Client.${{ steps.next_version.outputs.VERSION }}.nupkg --api-key ${{ secrets.MYGET_APIKEY }} --source https://www.myget.org/F/transactionprocessing/api/v2/package
        dotnet pack "EstateManagement.Estate.DomainEvents\EstateManagement.Estate.DomainEvents.csproj" /p:PackageVersion=${{ steps.next_version.outputs.VERSION }} --output Nugets -c Release
        dotnet nuget push Nugets/EstateManagement.Estate.DomainEvents.${{ steps.next_version.outputs.VERSION }}.nupkg --api-key ${{ secrets.MYGET_APIKEY }} --source https://www.myget.org/F/transactionprocessing/api/v2/package
        dotnet pack "EstateManagement.Merchant.DomainEvents\EstateManagement.Merchant.DomainEvents.csproj" /p:PackageVersion=${{ steps.next_version.outputs.VERSION }} --output Nugets -c Release
        dotnet nuget push Nugets/EstateManagement.Merchant.DomainEvents.${{ steps.next_version.outputs.VERSION }}.nupkg --api-key ${{ secrets.MYGET_APIKEY }} --source https://www.myget.org/F/transactionprocessing/api/v2/package
        dotnet pack "EstateManagement.Contract.DomainEvents\EstateManagement.Contract.DomainEvents.csproj" /p:PackageVersion=${{ steps.next_version.outputs.VERSION }} --output Nugets -c Release
        dotnet nuget push Nugets/EstateManagement.Contract.DomainEvents.${{ steps.next_version.outputs.VERSION }}.nupkg --api-key ${{ secrets.MYGET_APIKEY }} --source https://www.myget.org/F/transactionprocessing/api/v2/package
        dotnet pack "EstateManagement.MerchantStatement.DomainEvents\EstateManagement.MerchantStatement.DomainEvents.csproj" /p:PackageVersion=${{ steps.next_version.outputs.VERSION }} --output Nugets -c Release
        dotnet nuget push Nugets/EstateManagement.MerchantStatement.DomainEvents.${{ steps.next_version.outputs.VERSION }}.nupkg --api-key ${{ secrets.MYGET_APIKEY }} --source https://www.myget.org/F/transactionprocessing/api/v2/package
        dotnet pack "EstateManagement.Database\EstateManagement.Database.csproj" /p:PackageVersion=${{ steps.next_version.outputs.VERSION }} --output Nugets -c Release
        dotnet nuget push Nugets/EstateManagement.Database.${{ steps.next_version.outputs.VERSION }}.nupkg --api-key ${{ secrets.MYGET_APIKEY }} --source https://www.myget.org/F/transactionprocessing/api/v2/package

    - name: Publish Images to Docker Hub
      run: |
        docker build . --file EstateManagement/Dockerfile --tag stuartferguson/estatemanagement:master
        docker login --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
        docker push stuartferguson/estatemanagement:master

  buildwidows:
    name: "Publish Pre-Release Docker for Windows"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"

    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v2.3.4 
      with:
        fetch-depth: 0

    - name: Publish Windows Images to Docker Hub
      run: |
        docker build . --file EstateManagement/Dockerfilewindows --tag stuartferguson/estatemanagementwindows:master
        docker login --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
        docker push stuartferguson/estatemanagementwindows:master